class CreateGamers < ActiveRecord::Migration[5.2]
  def change
    create_table :gamers do |t|
      t.string :name
      t.string :surname
      t.integer :team_id

      t.timestamps
    end
  end
end

class AddGamersReferenceToTeam < ActiveRecord::Migration[5.2]
  def change
    add_reference :gamers, :team, index: true
  end
end

class AddReferenceAchievesToGamersMatches < ActiveRecord::Migration[5.2]
  def change
    add_reference :achieves, :gamers_matches, index: :true
  end
end
class CreateJoinTableGamersMatches < ActiveRecord::Migration[5.2]
  def change
    create_join_table :gamers, :matches do |t|
      t.index [:gamer_id, :match_id]
      t.index [:match_id, :gamer_id]
    end
  end
end


Mad_zgrkama

Тестовое задание / Ruby Developer
Предметная область:
Есть игроки, которые играют за команду, принимая участие в матчах.
Есть показатели ("пробежал 10+ км", "сделал 70+ % точных передач" и так далее).
Игроки в каждом матче какие-то показатели выполняют, а какие-то нет.

Задание:
Создать модели к данной предметной области.

Написать методы, которые позволяют:

- отметить, что игрок выполнил такой-то показатель в матче
- проверить выполнил ли игрок конкретный показатель хотя бы 1 раз за предыдущие 5 матчей команды
    Выбрать последние 5 матчей команды - сохранить набор (ok, last_five_matches, def in MatchesHelper)
    Выбрать игрока - сохранить id
    Выбрать 
- выбрать Top-5 игроков по конкретному показателю в конкретной команде и по всем командам в целом

P.S. Полный набор атрибутов в моделях не принципиален, так что можно обойтись минимально достаточным.



<p>
  <strong>gamer achieves:</strong>
  <% if @gamer_achieves.nil? %>
    "No achieves has this gamer!"
  <% else %>
    <% @gamer_achieves.each do |ga| %>
      <%= ga.achieve.description %>
      <%= link_to "In #{ga.match_id} match",  match_path(ga.match_id) %>
    <% end %>
  <% end %>
</p>

